import org.gradle.api.tasks.Exec

task AinitDOT {
  String projectDir = "."
  doLast {
  //https://www.oxygenxml.com/InstData/PublishingEngine/oxygen-publishing-engine-3.x.zip
  ant.get(src: 'http://mirror.oxygenxml.com/maven-nightly/com/oxygenxml/oxygen-publishing-engine-3.x/22.0-SNAPSHOT/oxygen-publishing-engine-3.x-22.0-SNAPSHOT-package-full.zip', dest: "${projectDir}/dita-ot.zip", skipexisting: 'true')
  ant.unzip(src: "${projectDir}/dita-ot.zip", dest: 'dita-ot')
  new File("${projectDir}/dita-ot/oxygen-publishing-engine-3.x/licensekey.txt").write(System.getenv( 'LICENSE_KEY' ).replaceAll("  ", "\n"))
 }
}

task BrunTransformation(type:Exec) {
 workingDir "${projectDir}/dita-ot/oxygen-publishing-engine-3.x/bin"
 commandLine "sh", "${projectDir}/dita-ot/oxygen-publishing-engine-3.x/bin/dita", "--project", "${projectDir}/../blog-project.xml", "-v"
}

task CcopySite(type: Copy) {
 doLast {
    from "${projectDir}/dita-ot/oxygen-publishing-engine-3.x/bin/out/site"
    into "${projectDir}/../site"
  }
}

task DinitValidation {
 String projectDir = "."
 doLast {
  ant.get(src: 'https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz', dest: "${projectDir}/oxygen.tar.gz", skipexisting: 'true')
  ant.untar(src: "${projectDir}/oxygen.tar.gz", dest: "${projectDir}/extracted", compression: 'gzip')
  new File("${projectDir}/extracted/oxygen/scriptinglicensekey.txt").write(System.getenv( 'SCRIPTING_LICENSE_KEY' ).replaceAll("  ", "\n"))
 }
}

task ErunValidation(type:Exec) {
 workingDir "${projectDir}/extracted/oxygen"
 ignoreExitValue true
 commandLine "sh", "${projectDir}/extracted/oxygen/validateCheckDITA.sh", "-i", "${projectDir}/../oxygen_xml_blog.ditamap", "-r", "${projectDir}/../site/validationReport.xml"
}

task dist(dependsOn: [AinitDOT, BrunTransformation, CcopySite, DinitValidation, ErunValidation])

defaultTasks 'dist'
